name: Build Windows Server 2019

on: [push]

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
    - name: Install Qt
      uses: jurplel/install-qt-action@v2

    - name: Install Dependencies
      run: choco install doxygen.install

#    - name: Install Capâ€™n Proto
#      run: |
#        mkdir "${{ runner.workspace }}/capnp"
#        cd "${{ runner.workspace }}/capnp"
#        git clone https://github.com/sandstorm-io/capnproto.git
#        cd capnproto
#        git checkout release-0.8.0
#        cd c++
#        mkdir _build
#        cd _build
#        cmake .. -G "Visual Studio 16 2019" -A x64
#        cmake --build . --parallel --config Release
#        cmake --build . --target install --config Release

    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: 'true'

    - name: Checkout Tags
      run: |
        git fetch --prune --unshallow --tags

    - name: CMake
      run: |
        mkdir "${{ runner.workspace }}/_build"
        cd "${{ runner.workspace }}/_build"
        cmake %GITHUB_WORKSPACE% -G "Visual Studio 16 2019" -A x64 ^
        -DHAS_HDF5=ON ^
        -DHAS_QT5=ON ^
        -DHAS_CURL=ON ^
        -DHAS_CAPNPROTO=OFF ^
        -DBUILD_DOCS=ON ^
        -DBUILD_APPS=ON ^
        -DBUILD_SAMPLES=ON ^
        -DBUILD_TIME=ON ^
        -DBUILD_PY_BINDING=ON ^
        -DBUILD_CSHARP_BINDING=ON ^
        -DBUILD_ECAL_TESTS=ON ^
        -DECAL_LAYER_ICEORYX=OFF ^
        -DECAL_INCLUDE_PY_SAMPLES=OFF ^
        -DECAL_INSTALL_SAMPLE_SOURCES=ON ^
        -DECAL_JOIN_MULTICAST_TWICE=OFF ^
        -DECAL_NPCAP_SUPPORT=OFF ^
        -DECAL_THIRDPARTY_BUILD_CMAKE_FUNCTIONS=ON ^
        -DECAL_THIRDPARTY_BUILD_PROTOBUF=ON ^
        -DECAL_THIRDPARTY_BUILD_SPDLOG=ON ^
        -DECAL_THIRDPARTY_BUILD_TINYXML2=ON ^
        -DECAL_THIRDPARTY_BUILD_FINEFTP=ON ^
        -DECAL_THIRDPARTY_BUILD_CURL=ON ^
        -DECAL_THIRDPARTY_BUILD_GTEST=ON ^
        -DECAL_THIRDPARTY_BUILD_HDF5=ON ^
        -DBUILD_SHARED_LIBS=OFF ^
        -DCMAKE_PREFIX_PATH="%ProgramFiles(x86)%/Cap'n Proto/lib/cmake/CapnProto" ^
        -DCMAKE_BUILD_TYPE=Release
        mkdir "%ALLUSERSPROFILE%\eCAL"
        copy "%GITHUB_WORKSPACE%\ecal\core\cfg\ecal.ini" "%ALLUSERSPROFILE%\eCAL"
      shell: cmd

    - name: Build Release
      run: cmake --build . --parallel --config Release
      working-directory: ${{ runner.workspace }}/_build

    - name: Build Python Egg
      run: cmake --build . --target create_python_egg --config Release
      working-directory: ${{ runner.workspace }}/_build

    - name: Build Documentation C
      run: cmake --build . --target documentation_c
      working-directory: ${{ runner.workspace }}/_build

    - name: Build Documentation C++
      run: cmake --build . --target documentation_cpp
      working-directory: ${{ runner.workspace }}/_build

    - name: Run Tests
      run: ctest -C Release -V
      working-directory: ${{ runner.workspace }}/_build

    - name: Pack
      run: cpack -C Release
      working-directory: ${{ runner.workspace }}/_build

    - name: Upload MSI
      uses: actions/upload-artifact@v2
      with:
        name: windows-msi
        path: ${{ runner.workspace }}/_build/_deploy/*.msi

    - name: Upload Python Egg
      uses: actions/upload-artifact@v2
      with:
        name: windows-python-egg
        path: ${{ runner.workspace }}/_build/_deploy/*.egg
