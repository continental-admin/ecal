name: Build Ubuntu 20.04 (Iceoryx)

on: [push]

jobs:
  build-ubuntu:
    runs-on: ubuntu-20.04

    steps:
    - name: Install Dependencies
      run: |
        sudo apt update
        sudo apt-get install ninja-build libprotobuf-dev libprotoc-dev protobuf-compiler libacl1-dev libncurses5-dev pkg-config

    - name: Install Iceoryx
      run: |
        mkdir "${{ runner.workspace }}/iceoryx"
        cd "${{ runner.workspace }}/iceoryx"
        git clone -b v0.16.1 --depth 1 https://github.com/eclipse/iceoryx.git
        cd iceoryx
        ./tools/iceoryx_build_test.sh

    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: 'true'

    - name: Checkout Tags
      run: |
        git fetch --prune --unshallow --tags

    - name: CMake
      run: |
        mkdir "${{ runner.workspace }}/_build"
        cd "${{ runner.workspace }}/_build"
        cmake $GITHUB_WORKSPACE -G "Ninja" \
        -DHAS_HDF5=OFF \
        -DHAS_QT5=OFF \
        -DHAS_CURL=OFF \
        -DHAS_CAPNPROTO=OFF \
        -DBUILD_DOCS=OFF \
        -DBUILD_APPS=OFF \
        -DBUILD_SAMPLES=ON \
        -DBUILD_TIME=OFF \
        -DBUILD_PY_BINDING=OFF \
        -DBUILD_CSHARP_BINDING=OFF \
        -DBUILD_TESTS=ON \
        -DECAL_LAYER_ICEORYX=ON \
        -DECAL_INCLUDE_PY_SAMPLES=OFF \
        -DECAL_INSTALL_SAMPLE_SOURCES=OFF \
        -DECAL_JOIN_MULTICAST_TWICE=OFF \
        -DECAL_NPCAP_SUPPORT=OFF \
        -DECAL_THIRDPARTY_BUILD_CMAKE_FUNCTIONS=ON \
        -DECAL_THIRDPARTY_BUILD_PROTOBUF=OFF \
        -DECAL_THIRDPARTY_BUILD_SPDLOG=ON \
        -DECAL_THIRDPARTY_BUILD_TINYXML2=ON \
        -DECAL_THIRDPARTY_BUILD_FINEFTP=OFF \
        -DECAL_THIRDPARTY_BUILD_CURL=OFF \
        -DECAL_THIRDPARTY_BUILD_GTEST=ON \
        -DECAL_THIRDPARTY_BUILD_HDF5=OFF \
        -DCMAKE_PREFIX_PATH="${{ runner.workspace }}/iceoryx/iceoryx/build/install/prefix/lib/cmake/iceoryx_posh" \
        -DCMAKE_BUILD_TYPE=Release
      shell: bash

    - name: Build Release
      run: cmake --build . --config Release
      working-directory: ${{ runner.workspace }}/_build

    - name: Run Tests
      run: ctest -V
      working-directory: ${{ runner.workspace }}/_build
